{"version":3,"sources":["redux/ActionTypes.js","redux/Reducers.js","redux/Store.js","config/index.js","config/env/prod.js","helpers/Request.js","api/Account.js","redux/Actions.js","helpers/Toast.js","types/UserRole.js","navigation/NavBar.js","components/FormWrapper.js","pages/LoginPage.js","pages/SignupPage.js","api/Group.js","components/GroupCard.js","components/EnsureLoggedIn.js","components/CreateGroupDialog.js","components/Loading.js","pages/group/GroupListPage.js","components/SortTable.js","api/Challenge.js","components/YouTubeVideo.js","components/ActivityCard.js","components/CreateActivityDialog.js","pages/group/GroupDetailPage.js","pages/PasswordResetPage.js","components/ChallengeCard.js","pages/challenge/ChallengeListPage.js","components/RewardCard.js","pages/challenge/ChallengeDetailPage.js","pages/ProfilePage.js","api/Admin.js","pages/admin/SearchUserPage.js","pages/admin/UpdateUserPage.js","api/CustomerRep.js","pages/rep/RepChallengeListPage.js","pages/rep/RepEditChallengePage.js","pages/rep/RepRewardListPage.js","pages/rep/RepEditRewardPage.js","pages/IndexPage.js","navigation/Router.js","App.js","reportWebVitals.js","index.js"],"names":["ActionTypes","Object","freeze","LOGIN","LOGOUT","JOIN_GROUP","LEAVE_GROUP","SET_MY_GROUPS","REFRESH","RESET","INITIAL","token","me","myGroups","myChallenges","Reducers","state","payload","_state","_payload","_cloneDeep","Store","createStore","type","console","warn","env","process","log","API_URL","SESS_COOKIE","headers","instance","axios","create","baseURL","config","responseType","params","web","withCredentials","send","method","url","data","a","more","res","code","_get","status","msg","statusText","Error","Request","header","name","value","undefined","authorization","get","post","body","put","login","signup","touch","getQuestions","email","answerQuestions","passreset","password","joinGroup","group","leaveGroup","ERROR_COLOR","show","text","backgroundColor","Toastify","position","duration","showToast","Toast","success","error","err","message","String","UserRole","END_USER","ADMIN","CUSTOMER_REP","mapDispatchToProps","logout","connect","ownProps","props","role","bg","expand","Toggle","aria-controls","Collapse","id","Nav","className","to","onClick","api","then","catch","FormWrapper","sending","trySending","bind","onSubmit","this","setState","event","preventDefault","stopPropagation","form","currentTarget","checkValidity","formData","FormData","forEach","v","k","children","React","Component","LoginPage","tryLogin","user","Container","Form","Control","placeholder","required","Button","variant","disabled","SignupPage","successful","trySignup","htmlFor","EMPTY_JSON","groupId","GroupCard","disableLeave","tryLeaveGroup","coach","coachId","myId","Card","Header","_id","size","Body","Text","firstName","lastName","DEFAULT_MESSAGE","DEFAULT_FLIPPED","call","redirect","flipped","myRole","CreateGroupDialog","Modal","aria-labelledby","onHide","onClose","centered","closeButton","Title","created","FormControl","Loading","Spinner","animation","$GroupListPage","groups","showCreateGroup","tryGettingGroups","tryJoinGroup","onCreateGroupClose","changes","groupCode","Array","isArray","Row","Col","sm","map","index","GroupListPage","SortTable","sort","arrayWrapChildren","craftOnClick","setSort","sortedData","child","key","heading","cb","inner","b","rows","d","i","cells","c","j","push","cell","Table","participateInChallenge","challengeId","getChallenge","getChallengeProgress","YT_RE","YT_ID_RE","YouTubeVideo","hyperlink","width","height","videoId","link","match","getYouTubeId","src","title","frameborder","allow","allowfullscreen","style","ActivityCard","disableParticipate","watchVideo","tryParticipate","result","activity","Accordion","as","eventKey","ekey","description","CreateActivityDialog","$GroupDetailPage","showCreateDialog","tryGettingGroup","onDialogClose","members","activities","isCoach","length","m","defaultActiveKey","Connected","GroupDetailPage","useParams","Progress","ENTER_EMAIL","ANSWER_QUESTION","RESET_PASSWORD","DONE","EnterEmailForm","move","sendEmail","AnswerQuestionsForm","answer","FormLabel","question1","question2","ResetPasswordForm","reset","passwordCheck","PasswordResetPage","progress","getForm","REWARD_BADGE_CSS","fontSize","ChallengeCard","challenge","reward","class","Footer","closes","$ChallengeListPage","challenges","tryGettingChallenges","ChallengeListPage","RewardCard","company","ParticipantBlock","participant","percent","distance","toFixed","$ChallengeDetailPage","fetching","tryGettingChallenge","tryGettingProgress","x","ChallengeDetailPage","$ProfilePage","trySendingFitdata","updated","defaultValue","waist","pushupScore","situpScore","freq","min","max","ProfilePage","searchUser","updateUser","userId","searchUserById","SearchUserPage","foundUser","trySearchingUser","searchData","ListGroup","Item","action","history","pathname","withRouter","UpdateUserPage","tryUpdate","fetchData","age","gender","getAllChallenges","cid","createChallenge","updateChallenge","$RepChallengeListPage","RepChallengeListPage","$RepEditChallengePage","exit","isCreateMode","formatDate","date","Date","now","setMonth","getMonth","moment","format","RepEditChallengePage","$RepRewardListPage","RepRewardListPage","$RepEditRewardPage","RepEditRewardPage","Router","path","exact","component","App","loading","touchServer","Cookies","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.c3fea973.chunk.js","sourcesContent":["/**\r\n * @enum {number}\r\n */\r\nconst ActionTypes = Object.freeze({\r\n  LOGIN: 1,\r\n  LOGOUT: 2,\r\n  JOIN_GROUP: 3,\r\n  LEAVE_GROUP: 4,\r\n  SET_MY_GROUPS: 5,\r\n  REFRESH: 6,\r\n  RESET: 7,\r\n});\r\n\r\nexport default ActionTypes;\r\n","import ActionTypes from './ActionTypes';\r\nimport _cloneDeep from 'lodash.clonedeep';\r\n\r\nconst INITIAL = {\r\n  token: null,\r\n  me: null,\r\n  myGroups: [],\r\n  myChallenges: []\r\n};\r\n\r\nconst Reducers = {\r\n  [ActionTypes.LOGIN]: (state, payload) => {\r\n    return { ...state, ...payload };\r\n  },\r\n\r\n  [ActionTypes.LOGOUT]: (state, payload) => {\r\n    return { ...state, ...payload };\r\n  },\r\n\r\n  [ActionTypes.RESET]: (_state, _payload) => {\r\n    return _cloneDeep(INITIAL);\r\n  },\r\n\r\n  [ActionTypes.REFRESH]: (state, _payload) => {\r\n    return state;\r\n  },\r\n};\r\n\r\n\r\n\r\nexport default function fn(state, { type, payload }={}) {\r\n  if (!state) {\r\n    state = _cloneDeep(INITIAL);\r\n  }\r\n  if (typeof Reducers[type] === 'function') {\r\n    return Reducers[type](state, payload);\r\n  } else {\r\n    console.warn(`type (${type}) not mapped`);\r\n    return state;\r\n  }\r\n}\r\n","import { createStore } from 'redux';\r\nimport reducers from './Reducers';\r\n\r\nconst Store = createStore(reducers);\r\nexport default Store;","import dev from './env/dev';\nimport prod from './env/prod';\n\nconst env = process.env.NODE_ENV || 'production';\nconsole.log(`env: ${env}`);\nexport default (env === 'development' ? dev : prod);\n","export default {\n  API_URL: 'https://fat2fit-api.herokuapp.com',\n  SESS_COOKIE: 'sess'\n};\n","import axios from 'axios';\nimport _get from 'lodash.get';\nimport config from '../config';\n\n/**\n * @template T\n * @typedef ResponseData\n * @property {{code: number, msg: string}} meta\n * @property {T} data\n */\n\n/** @type {Record<string, string>} */\nconst headers = {\n  'Accept': 'application/json',\n  'Content-Type': 'application/json' // 'x-www-form-urlencoded'\n};\n\nconst instance = axios.create({\n  baseURL: config.API_URL,\n  responseType: 'json',\n  params: { web: true },\n  withCredentials: true,\n});\n\n\nasync function send(method, url, data, more={}) {\n  const res = await instance({ url, method, headers, data, ...more });\n  const code = _get(res, 'data.meta.code', 200);\n  if (res.status === 200 && code === 200) {\n    return _get(res, 'data.data', res.data) || {};\n  }\n  const msg = _get(res, 'data.meta.msg') || res.statusText;\n  throw new Error(msg);\n}\n\n\nconst Request = {\n\n  /**\n   * @param {string} name\n   * @param {string} [value]\n   */\n  header(name, value) {\n    if (value !== undefined) {\n      headers[name] = value;\n    }\n    return headers[name];\n  },\n\n  authorization(value) {\n    value = typeof value === 'string' ? `Bearer\\x20${value}` : null;\n    return Request.header('Authorization', value);\n  },\n\n  /**\n   * @param {string} url\n   */\n  get: url => send(\"GET\", url),\n\n  /**\n   * @param {string} url\n   * @param {*} body\n   */\n  post: (url, body) => send(\"POST\", url, body),\n\n  /**\n   * @param {string} url\n   * @param {*} body\n   */\n  put: (url, body) => send(\"PUT\", url, body),\n\n  send,\n};\n\nexport default Request;\n","import Request from '../helpers/Request';\r\n\r\nexport async function login(body) {\r\n  console.log(body);\r\n  const res = await Request.post('/account/login', body);\r\n  return res;\r\n}\r\n\r\nexport async function signup(data) {\r\n  const res = await Request.post('/account/signup', data);\r\n  return res;\r\n}\r\n\r\nexport async function logout() {\r\n  const res = await Request.get('/account/logout');\r\n  return res;\r\n}\r\n\r\nexport async function touch() {\r\n  // const res = await Request.get('/account/touch');\r\n  const res = await Request.send('GET', '/account/touch', null, {\r\n    withCredentials: true\r\n  });\r\n  return res;\r\n}\r\n\r\nexport async function sendFitData(data) {\r\n  const res = await Request.post('/account/fitdata', data);\r\n  return res;\r\n}\r\n\r\nexport async function getQuestions(email) {\r\n  const res = await Request.get(`/account/questions?email=${email}`);\r\n  return res;\r\n}\r\n\r\nexport async function answerQuestions(data) {\r\n  const res = await Request.post('/account/questions', data);\r\n  return res;\r\n}\r\n\r\nexport async function passreset({ password, token }={}) {\r\n  Request.authorization(token);\r\n  try {\r\n    const res = await Request.post('/account/passreset', { password });\r\n    Request.authorization(null);\r\n    return res;\r\n  } catch (e) {\r\n    Request.authorization(null);\r\n    throw e;\r\n  }\r\n}\r\n","import ActionTypes from './ActionTypes';\r\n\r\n/**\r\n * @typedef ActionObject\r\n * @property {ActionTypes} type\r\n * @property {any} payload\r\n */\r\n\r\n/** @returns {ActionObject} */\r\nexport const login = (me, token) => ({\r\n  type: ActionTypes.LOGIN,\r\n  payload: { me, token }\r\n});\r\n\r\n\r\n/** @returns {ActionObject} */\r\nexport const logout = () => ({\r\n  type: ActionTypes.LOGOUT,\r\n  payload: {\r\n    me: null,\r\n    token: null,\r\n  }\r\n});\r\n\r\n/** @returns {ActionObject} */\r\nexport const refresh = () => ({\r\n  type: ActionTypes.REFRESH,\r\n  payload: null,\r\n});\r\n\r\n/** @returns {ActionObject} */\r\nexport const reset = () => ({\r\n  type: ActionTypes.RESET,\r\n  payload: null,\r\n});\r\n\r\n/** @returns {ActionObject} */\r\nexport const joinGroup = (group) => ({\r\n  type: ActionTypes.JOIN_GROUP,\r\n  payload: group\r\n});\r\n/** @returns {ActionObject} */\r\nexport const leaveGroup = (group) => ({\r\n  type: ActionTypes.LEAVE_GROUP,\r\n  payload: group\r\n});\r\n","import Toastify from 'toastify-js';\n\nconst SUCCESS_COLOR = '#5cb85c';\nconst ERROR_COLOR = '#d9534f';\n\nfunction show(text, backgroundColor) {\n  Toastify({\n    text,\n    backgroundColor,\n    position: 'center',\n    duration: 1000,\n  }).showToast();\n}\n\nconst Toast = {\n  success(text) {\n    show(text, SUCCESS_COLOR);\n  },\n\n  error(err) {\n    if (typeof err === 'string') {\n      show(err, ERROR_COLOR)\n    } else {\n      show(err.message || String(err), ERROR_COLOR);\n    }\n  }\n};\n\nexport default Toast;\n","/**\r\n * @enum {'U'|'A'|'C'}\r\n */\r\nconst UserRole = Object.freeze({\r\n  END_USER: 'U',\r\n  ADMIN: 'A',\r\n  CUSTOMER_REP: 'C',\r\n});\r\n\r\nexport default UserRole;","import RBNavbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport { Link } from 'react-router-dom'\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as api from '../api/Account';\r\nimport { logout } from '../redux/Actions';\r\nimport Toast from '../helpers/Toast';\r\nimport UserRole from '../types/UserRole';\r\n\r\nfunction NavBar(props) {\r\n  function onLogoutClick() {\r\n    api.logout().then(() => {\r\n      props.logout();\r\n    }).catch(err => {\r\n      props.logout(); // temp\r\n    });\r\n  }\r\n  const me = props.me;\r\n  const role = (me && me.role) || null;\r\n  return (\r\n    <RBNavbar bg=\"light\" expand=\"lg\">\r\n      <RBNavbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <RBNavbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          {/* {role === 'U' ? <>\r\n            <Link to=\"/profile\" className=\"nav-link\">Profile</Link>\r\n            <Link to=\"/login\" className=\"nav-link\" onClick={onLogoutClick}>Logout</Link>\r\n            <Link to=\"/groups\" className=\"nav-link\">Groups</Link>\r\n            <Link to=\"/challenges\" className=\"nav-link\">Challenges</Link>\r\n          </> : <>\r\n            <Link to=\"/signup\" className=\"nav-link\">Signup</Link>\r\n            <Link to=\"/login\" className=\"nav-link\">Login</Link>\r\n          </>}\r\n          {role === 'A' ? <>\r\n          <Link to=\"/searchUser\" className=\"nav-link\">Search User</Link>\r\n          </>\r\n          :<></>\r\n          } */}\r\n          {role === UserRole.END_USER ? <>\r\n            <Link to=\"/profile\" className=\"nav-link\">Profile</Link>\r\n            <Link to=\"/groups\" className=\"nav-link\">Groups</Link>\r\n            <Link to=\"/challenges\" className=\"nav-link\">Challenges</Link>\r\n          \r\n          </> : role === UserRole.ADMIN ? <>\r\n            <Link to=\"/searchUser\" className=\"nav-link\">Search User</Link>\r\n          \r\n          </> : role === UserRole.CUSTOMER_REP ? <>\r\n            <Link to=\"/rep/challenges\" className=\"nav-link\">Challenges</Link>\r\n            <Link to=\"/rep/rewards\" className=\"nav-link\">Rewards</Link>\r\n\r\n          </> : <>\r\n            <Link to=\"/signup\" className=\"nav-link\">Signup</Link>\r\n            <Link to=\"/login\" className=\"nav-link\">Login</Link>\r\n          </>}\r\n\r\n        </Nav>\r\n          {role &&\r\n          <Link to=\"/login\" className=\"nav-link mr-0\" onClick={onLogoutClick}>Logout</Link>}\r\n      </RBNavbar.Collapse>\r\n    </RBNavbar>\r\n  );\r\n}\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => ({ ...state });\r\nconst mapDispatchToProps = { logout };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBar);\r\n","import React from 'react';\nimport Toast from '../helpers/Toast';\n\n\n/**\n * @typedef FormWrapperProps\n * @property {(data:any)=>Promise<void>} onSubmit\n */\n\n/**\n * @extends {React.Component<FormWrapperProps>}\n */\nexport default class FormWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { sending: false };\n    this.trySending = this.trySending.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  async trySending(data) {\n    this.setState({ sending: true });\n    try {\n      await this.props.onSubmit(data);\n    } catch (e) {\n      Toast.error(e);\n    }\n    this.setState({ sending: false });\n  }\n\n  /**\n   * @param {Event} event\n   */\n  onSubmit(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    const form = event.currentTarget;\n    if (form.checkValidity()) {\n      const formData = new FormData(form);\n      const data = {};\n      formData.forEach((v, k) => data[k] = v);\n      this.trySending(data);\n    }\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.onSubmit}>\n        {this.props.children(this.state.sending)}\n      </form>\n    );\n  }\n}\n","import React from 'react';\r\nimport { Form, Button, Container } from 'react-bootstrap';\r\nimport * as api from '../api/Account';\r\nimport FormWrapper from '../components/FormWrapper';\r\nimport Toast from '../helpers/Toast';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../redux/Actions';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport Request from '../helpers/Request';\r\n\r\nclass LoginPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.tryLogin = this.tryLogin.bind(this);\r\n  }\r\n\r\n  async tryLogin(data) {\r\n    try {\r\n      const res = await api.login(data);\r\n      this.props.login(res.user, res.token);\r\n      Request.header('Authorization', `Bearer\\x20${res.token}`);\r\n      Toast.success('Successfully logged in');\r\n    } catch (err) {\r\n      Toast.error(err);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.props.me) {\r\n      // Toast.error('Already logged in');\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Container className=\"w-50\">\r\n          <h1>Login</h1>\r\n          <hr></hr>\r\n          <FormWrapper onSubmit={this.tryLogin}>\r\n            {sending => <>\r\n              <Form.Control type=\"email\" className=\"rounded-pill my-3\" placeholder=\"Email\" name=\"email\" required />\r\n              <Form.Control type=\"password\" className=\"rounded-pill my-3\" placeholder=\"Password\" name=\"password\" required />\r\n              <Button variant=\"success\" type=\"submit\" className=\"rounded-pill mt-2 w-100\" disabled={sending}>Login</Button>\r\n            </>}\r\n          </FormWrapper>\r\n          <Link to=\"/passreset\">Forgot password?</Link>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => ({ ...state });\r\nconst mapDispatchToProps = { login };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);\r\n","import '../styles/signup.css'\r\n\r\nimport React from 'react';\r\nimport { signup } from '../api/Account';\r\nimport FormWrapper from '../components/FormWrapper';\r\nimport Toast from '../helpers/Toast';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport default class SignupPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { successful: false };\r\n    this.trySignup = this.trySignup.bind(this);\r\n  }\r\n\r\n  async trySignup(data) {\r\n    try {\r\n      const value = await signup(data);\r\n      Toast.success('SUCCESS');\r\n      this.setState({ successful: true });\r\n    } catch (err) {\r\n      Toast.error(err.message);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.state.successful) {\r\n      return <Redirect to=\"/login\" />;\r\n    }\r\n\r\n    // if (this.props.me) {\r\n    //   Toast.error('Already logged in');\r\n    //   return <Redirect to=\"/\" />\r\n    // }\r\n    return (\r\n      <div className=\"signUpForm-v2\">\r\n        <h2>Sign Up</h2>\r\n        <hr></hr>\r\n        <FormWrapper onSubmit={this.trySignup}>\r\n          {sending => <>\r\n            <p className=\"tableSection\">\r\n              Personal Information\r\n            </p>\r\n            <p className=\"double\">\r\n              <label htmlFor=\"firstName\" className=\"floatLabel\" type=\"text\">First Name</label>                \r\n              <input type=\"text\" placeholder=\"John\" name=\"firstName\" required/>\r\n\r\n              <label htmlFor=\"lastName\" className=\"floatLabel\" type=\"text\">Last Name</label>                \r\n              <input type=\"text\" placeholder=\"Doe\" name=\"lastName\" required/>\r\n            </p>\r\n            <p>\r\n              <label htmlFor=\"email\" className=\"floatLabel\" type=\"text\">Email</label>                \r\n              <input type=\"text\" placeholder=\"someone@example.com\" name=\"email\" required/>\r\n            </p>\r\n            <hr></hr>\r\n            <p className=\"tableSection\">\r\n              Account Information\r\n            </p>\r\n            <p className=\"double\">\r\n              <label htmlFor=\"studentNumber\" className=\"floatLabel\" type=\"text\">Student Number</label>                \r\n              <input type=\"text\" placeholder=\"300941374\" name=\"studentNumber\" required/>\r\n\r\n              <label htmlFor=\"program\" className=\"floatLabel\" type=\"text\">Program</label>                \r\n              <input type=\"text\" placeholder=\"Game Programming\" name=\"program\" required/>\r\n            </p>\r\n            <p>\r\n              <label htmlFor=\"phone\" className=\"floatLabel\" type=\"text\">Phone</label>                \r\n              <input type=\"text\" placeholder=\"1111234567\" name=\"phone\" required/>\r\n            </p>\r\n            <hr></hr>\r\n            <p className=\"tableSection\">\r\n              Address\r\n            </p>\r\n            <p className=\"double\">\r\n              <label htmlFor=\"address\" className=\"floatLabel\" type=\"text\">Address</label>                \r\n              <input type=\"text\" placeholder=\"47 Some Street\" name=\"address\" required/>\r\n\r\n              <label htmlFor=\"city\" className=\"floatLabel\" type=\"text\">City</label>                \r\n              <input type=\"text\" placeholder=\"Toronto\" name=\"city\" required/>\r\n            </p>\r\n            <p>\r\n              <label htmlFor=\"password\" className=\"floatLabel\" type=\"text\">Password</label>                \r\n              <input type=\"password\" placeholder=\"*******\" name=\"password\" required/>\r\n            </p>\r\n            \r\n            <button disabled={sending} type=\"submit\">Sign Up</button>\r\n          </>}\r\n        </FormWrapper>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import Request from '../helpers/Request';\r\nconst EMPTY_JSON =  {};\r\n\r\n/**\r\n * @param {string} groupId\r\n */\r\nexport async function getGroup(groupId) {\r\n  const res = await Request.get(`/group/${groupId}`);\r\n  return res;\r\n}\r\n\r\n/**\r\n * @param {{name:string}} param0\r\n */\r\nexport async function createGroup({ name }={}) {\r\n  // todo: add validation\r\n  const res = await Request.post('/group/create', { name });\r\n  return res;\r\n}\r\n\r\nexport async function createGroupActivity(groupId, data) {\r\n  const res = await Request.post(`/group/${groupId}/activity/create`, data);\r\n  return res;\r\n}\r\n\r\nexport async function getMyGroups() {\r\n  const res = await Request.get('/group/mine');\r\n  return res;\r\n}\r\n\r\n/**\r\n * @param {string} groupId\r\n */\r\nexport async function joinGroup(groupId) {\r\n  const res = await Request.put(`/group/join/${groupId}`, EMPTY_JSON);\r\n  return res;\r\n}\r\n\r\n/**\r\n * @param {string} groupId\r\n */\r\nexport async function leaveGroup(groupId) {\r\n  const res = await Request.put(`/group/leave/${groupId}`, EMPTY_JSON);\r\n  return res;\r\n}\r\n\r\n/**\r\n * @param {string} groupId\r\n * @param {string} memberId\r\n */\r\nexport async function removeGroupMember(groupId, memberId) {\r\n  const body = { member: memberId };\r\n  const res = await Request.post(`/group/${groupId}/remove`, body);\r\n  return res;\r\n}\r\n","import React from 'react';\r\nimport { Card, Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport _get from 'lodash.get';\r\nimport { connect } from 'react-redux';\r\nimport { joinGroup, leaveGroup } from '../redux/Actions';\r\nimport * as api from '../api/Group';\r\nimport Toast from '../helpers/Toast';\r\n\r\n\r\nclass GroupCard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { disableLeave: false };\r\n    this.tryLeaveGroup = this.tryLeaveGroup.bind(this);\r\n  }\r\n\r\n  async tryLeaveGroup() {\r\n    this.setState({ disableLeave: true });\r\n    const groupId = _get(this.props, 'group._id');\r\n    try {\r\n      if (groupId) {\r\n        await api.leaveGroup(groupId);\r\n      } else {\r\n        throw new Error('Invalid group id');\r\n      }\r\n    } catch (err) {\r\n      Toast.error(err);\r\n    }\r\n    this.setState({ disableLeave: false });\r\n  }\r\n\r\n  render() {\r\n    const group = this.props.group || {};\r\n    const coach = group.coach;\r\n    const coachId = typeof coach === 'string' ? coach : _get(coach, '_id');\r\n    const myId = _get(this.props, 'me._id');\r\n\r\n    return (\r\n      <Card className=\"mx-auto w-75 mb-4\">\r\n        <Card.Header className=\"d-flex justify-content-between\">\r\n          <Link to={`/groups/${group._id}`} className=\"h4 text-dark\">[{group._id}] {group.name}</Link>\r\n          <Button\r\n            onClick={this.tryLeaveGroup}\r\n            variant=\"danger\"\r\n            className=\"h-50 mr-0 w-10\"\r\n            size=\"sm\"\r\n            disabled={this.state.disableLeave || coachId === myId}\r\n          >Leave</Button>\r\n        </Card.Header>\r\n        <Card.Body>\r\n          <Card.Text>\r\n            Coach:{'\\x20'}\r\n            {typeof coach === 'string' ? coach : (\r\n              <span>\r\n                {coach.firstName} {coach.lastName}\r\n              </span>\r\n            )}\r\n            <br></br>\r\n            Members: <span className=\"text-success\">{_get(group, 'members.length', 0)}</span>\r\n            <br></br>\r\n            Activities: <span className=\"text-success\">{_get(group, 'activities.length', 0)}</span>\r\n            <br></br>\r\n          </Card.Text>\r\n        </Card.Body>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => ({ ...state });\r\nconst mapDispatchToProps = { joinGroup, leaveGroup };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GroupCard);\r\n","import { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Toast from '../helpers/Toast';\r\n\r\nconst DEFAULT_MESSAGE = 'Must be logged in';\r\nconst DEFAULT_FLIPPED = 'Already logged in';\r\n\r\nlet call = true;\r\n\r\n/**\r\n * @param {{\r\n * me: any,\r\n * redirect: string,\r\n * role?: 'U'|'A'|'C'\r\n * children: React.ReactNode,\r\n * message?: string,\r\n * flipped?: boolean,\r\n * }} props\r\n */\r\nfunction EnsureLoggedIn({ me, redirect, message, role, flipped=false, children }={}) {\r\n  const myRole = (me && me.role) || null;\r\n  if (!me === !!flipped) {\r\n    if (role) {\r\n      if (myRole === role) {\r\n        return children;\r\n      }\r\n    } else {\r\n      return children;\r\n    }\r\n  }\r\n\r\n  if (call) {\r\n    Toast.error(message || (flipped ? DEFAULT_FLIPPED : DEFAULT_MESSAGE));\r\n  }; call = !call;\r\n  return <Redirect to={redirect || '/login'} />\r\n}\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => ({ ...state });\r\n\r\n/**\r\n * will redirect the user if they are not logged in\r\n */\r\nexport default connect(mapStateToProps, null)(EnsureLoggedIn);\r\n","import { Modal, FormControl, Button } from 'react-bootstrap';\r\nimport FormWrapper from './FormWrapper';\r\nimport * as api from '../api/Group';\r\n\r\nexport default function CreateGroupDialog(props) {\r\n  function createGroup(data) {\r\n    return api.createGroup(data).then(created => {\r\n      props.onClose(true);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      show={props.show}\r\n      size=\"lg\"\r\n      aria-labelledby=\"createGroupDialogTitle\"\r\n      onHide={() => props.onClose(false)}\r\n      centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"createGroupDialogTitle\">\r\n          Create Group\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <FormWrapper onSubmit={createGroup}>\r\n          {sending => <>\r\n            <FormControl name=\"name\" placeholder=\"Group Name\" required />\r\n            <Button variant=\"success\" type=\"submit\" disabled={sending}>CREATE</Button>\r\n          </>}\r\n        </FormWrapper>\r\n      </Modal.Body>\r\n      {/* <Modal.Footer>\r\n        <Button onClick={() => props.onClose(false)}>Close</Button>\r\n      </Modal.Footer> */}\r\n    </Modal>\r\n  );\r\n}\r\n\r\n","import Spinner from 'react-bootstrap/Spinner';\r\nimport Container from 'react-bootstrap/Container';\r\n\r\nexport default function Loading() {\r\n  return (\r\n    <Container className=\"mt-3 mx-auto\">\r\n      <Spinner animation=\"border\" role=\"status\">\r\n      </Spinner>\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport * as api from '../../api/Group';\r\nimport { Container, FormControl, Row, Col, Button } from \"react-bootstrap\";\r\nimport Toast from \"../../helpers/Toast\";\r\nimport GroupCard from '../../components/GroupCard';\r\nimport FormWrapper from '../../components/FormWrapper';\r\nimport EnsureLoggedIn from '../../components/EnsureLoggedIn';\r\nimport CreateGroupDialog from '../../components/CreateGroupDialog';\r\nimport Loading from \"../../components/Loading\";\r\n\r\nclass $GroupListPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      groups: [],\r\n      showCreateGroup: false\r\n    };\r\n    this.tryGettingGroups = this.tryGettingGroups.bind(this);\r\n    this.tryJoinGroup = this.tryJoinGroup.bind(this);\r\n    this.onCreateGroupClose = this.onCreateGroupClose.bind(this);\r\n  }\r\n\r\n  tryGettingGroups() {\r\n    api.getMyGroups().then(groups => {\r\n      this.setState({ groups });\r\n    }).catch(Toast.error);\r\n  }\r\n\r\n  onCreateGroupClose(changes) {\r\n    this.setState({ showCreateGroup: false });\r\n    if (changes) {\r\n      this.tryGettingGroups();\r\n    }\r\n  }\r\n\r\n  async tryJoinGroup({ groupCode }={}) {\r\n    try {\r\n      await api.joinGroup(groupCode);\r\n      this.tryGettingGroups();\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.tryGettingGroups();\r\n  }\r\n\r\n  render() {\r\n    const groups = this.state.groups;\r\n    if (!Array.isArray(groups)) {\r\n      return <Loading />\r\n    }\r\n\r\n    return (\r\n      <Container className=\"py-4\">\r\n        <Row>\r\n          <Col className=\"h3\">\r\n            My Groups&nbsp;&nbsp;\r\n            <Button\r\n                variant=\"outline-info\"\r\n                size=\"sm\"\r\n                onClick={() => this.setState({ showCreateGroup: true })}\r\n              >Create</Button>\r\n          </Col>\r\n          <Col>\r\n            <FormWrapper onSubmit={this.tryJoinGroup}>\r\n              {sending => <>\r\n                <Row>\r\n                  <Col sm={4}>\r\n                    <FormControl type=\"text\" placeholder=\"Group Code\" name=\"groupCode\" required />\r\n                  </Col>\r\n                  <Col>\r\n                    <Button variant=\"success\" type=\"submit\" disabled={sending}>JOIN</Button>\r\n                  </Col>\r\n                </Row>\r\n              </>}\r\n            </FormWrapper>\r\n          </Col>\r\n        </Row>\r\n        <hr></hr>\r\n        {groups.map((group, index) => (\r\n          <GroupCard group={group} key={index} />\r\n        ))}\r\n        <CreateGroupDialog show={this.state.showCreateGroup} onClose={this.onCreateGroupClose} />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default function GroupListPage() {\r\n  return (\r\n    <EnsureLoggedIn>\r\n      <$GroupListPage />\r\n    </EnsureLoggedIn>\r\n  );\r\n}\r\n","import React from 'react';\nimport { Table } from 'react-bootstrap';\nimport _get from 'lodash.get';\n\n/**\n * @template T\n * @typedef SortTableProps\n * @property {Array<T>} data\n */\n\n/**\n * @typedef SortTableColProps\n * @property {string|null} heading\n * @property {string|null|false} sort\n */\n\n/**\n * @template T\n * @extends {React.Component<SortTableProps<T>>}\n */\nclass SortTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { sort: null };\n    this.arrayWrapChildren = this.arrayWrapChildren.bind(this);\n    this.craftOnClick = this.craftOnClick.bind(this);\n    this.setSort = this.setSort.bind(this);\n    this.header = this.header.bind(this);\n    this.sortedData = this.sortedData.bind(this);\n  }\n\n  arrayWrapChildren() {\n    if (this.props.children === undefined) {\n      return [];\n    } else if (Array.isArray(this.props.children)) {\n      return this.props.children;\n    } else {\n      return [this.props.children];\n    }\n  }\n\n  setSort(sort) {\n    if (sort !== this.state.sort) {\n      this.setState({ sort });\n    }\n  }\n\n  craftOnClick(sort) {\n    return sort ? () => this.setSort(sort) : null;\n  }\n\n  header(child, key) {\n    if (!child) return null;\n    const sort = child.props.sort;\n    return sort ? (\n      <th key={key} onClick={this.craftOnClick(sort)}>\n        {child.props.heading}{sort === this.state.sort ? '*' : null}\n      </th>\n    ) : (\n      <th key={key}>{child.props.heading}</th>\n    );\n  }\n\n  cell(child, data, key) {\n    if (!child) return null;\n    const cb = child.props.children;\n    const inner = typeof cb === 'function' ? cb(data) : data;\n    return <td key={key}>{inner}</td>;\n  }\n\n  /** @param {T[]} data */\n  sortedData() {\n    const sort = this.state.sort;\n    if (sort === null) {\n      return this.props.data;\n    }\n\n    return this.props.data.sort((a, b) => {\n      a = _get(a, sort, a);\n      b = _get(b, sort, b);\n      return (a < b) ? -1 : (a > b) ? 1 : 0\n    });\n  }\n\n  render() {\n    if (!Array.isArray(this.props.data)) {\n      console.log('UWUWUWUWUWUUWUWWWU');\n      return null;\n    }\n\n    const data = this.sortedData();\n    const children = this.arrayWrapChildren();\n    const headers = [];\n\n    const rows = data.map((d, i) => {\n      const cells = children.map((c, j) => {\n        if (i === 0) {\n          headers.push(this.header(c, `header#${j}`));\n        }\n        return this.cell(c, d, `cell#${i}:${j}`);\n      });\n      return <tr key={`row#${i}`}>{cells}</tr>;\n    });\n\n    return (\n      <Table>\n        <thead><tr>{headers}</tr></thead>\n        <tbody>{rows}</tbody>\n      </Table>\n    );\n  }\n}\n\n/**\n * @extends {React.Component<SortTableColProps>}\n */\nSortTable.Col = function() { return null; };\n\nexport default SortTable;\n","import Request from '../helpers/Request';\r\n\r\nexport async function getAvailableChallenges() {\r\n  const res = await Request.get('/challenge/available');\r\n  return res;\r\n}\r\n\r\nexport async function getMyChallenges() {\r\n  const res = await Request.get('/challenge/active');\r\n  return res;\r\n}\r\n\r\nexport async function participateInChallenge(challengeId) {\r\n  const res = await Request.get(`/challenge/participate/${challengeId}`);\r\n  return res;\r\n}\r\n\r\nexport async function getChallenge(challengeId) {\r\n  const res = await Request.get(`/challenge/${challengeId}`);\r\n  return res;\r\n}\r\n\r\nexport async function getChallengeProgress(challengeId) {\r\n  const res = await Request.get(`/challenge/progress/${challengeId}`);\r\n  return res;\r\n}\r\n","import React from 'react';\r\nimport { Button, Row, Col } from 'react-bootstrap';\r\n\r\n\r\nconst YT_RE = /^(https?:\\/\\/)?(www\\.)?youtu(\\.be\\/|be\\.com\\/watch\\?v=)[\\-\\w]{11}/;\r\nconst YT_ID_RE = /[\\w\\-]{11}$/;\r\n\r\n/**\r\n * @param {string} link\r\n */\r\nfunction getYouTubeId(link) {\r\n  try {\r\n    const [clean] = link.match(YT_RE);\r\n    const [id] = clean.match(YT_ID_RE);\r\n    return id;\r\n  } catch (err) {\r\n    console.error('Invalid Video hypelink!', err);\r\n    return false;\r\n  }\r\n}\r\n\r\n\r\nconst DEFAULT_WIDTH = 560;\r\nconst DEFAULT_HEIGHT = 315;\r\n\r\nexport default class YouTubeVideo extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      show: false,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    let { hyperlink, width, height } = this.props;\r\n    const { show } = this.state;\r\n    const videoId = hyperlink && getYouTubeId(hyperlink);\r\n    if (!videoId) {\r\n      return null;\r\n    }\r\n\r\n    width = width || DEFAULT_WIDTH;\r\n    height = height || DEFAULT_HEIGHT;\r\n\r\n    return (\r\n      <Row>\r\n        <Col>\r\n          {show &&\r\n          <iframe\r\n            width={width}\r\n            height={height}\r\n            src={`https://www.youtube.com/embed/${videoId}`}\r\n            title=\"YouTube video player\"\r\n            frameborder=\"0\"\r\n            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n            allowfullscreen></iframe>}\r\n            <br></br>\r\n          <Button variant=\"success\" style={{width}} onClick={() => this.setState({ show: !show })}>{show ? 'Hide' : 'Watch'} Video</Button>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Card, Button, Accordion } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport _get from 'lodash.get';\r\n\r\nimport * as api from '../api/Challenge';\r\nimport Toast from '../helpers/Toast';\r\nimport YouTubeVideo from './YouTubeVideo';\r\n\r\nexport default class ActivityCard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      disableParticipate: false,\r\n      watchVideo: false,\r\n    };\r\n    this.tryParticipate = this.tryParticipate.bind(this);\r\n  }\r\n\r\n  async tryParticipate() {\r\n    this.setState({ disableParticipate: true });\r\n    const _id = _get(this.props, 'activity._id');\r\n    try {\r\n      const result = await api.participateInChallenge(_id);\r\n      Toast.success(`Participated in \"${_get(result, 'activity.title', _id)}\"`);\r\n    } catch (err) {\r\n      Toast.error(err);\r\n    }\r\n    this.setState({ disableParticipate: false });  \r\n  }\r\n\r\n  render() {\r\n    const activity = this.props.activity;\r\n\r\n    if (!activity) {\r\n      return null;\r\n    }\r\n    console.log(activity);\r\n\r\n    // activity.reward = 1;\r\n    return (\r\n      <Card className=\"mx-auto\">\r\n        <Card.Header>\r\n          <Accordion.Toggle as={Button} variant=\"link\" eventKey={this.props.ekey || '0'}>\r\n            <span className=\"mr-0\">\r\n              {activity.title}\r\n              {/* {activity.reward &&\r\n                <span\r\n                  style={REWARD_BADGE_CSS}\r\n                  class=\"badge bg-warning text-sm rounded-pill\"\r\n                >Rewarded</span>} */}\r\n            </span>\r\n          </Accordion.Toggle>\r\n        </Card.Header>\r\n        <Accordion.Collapse eventKey={this.props.ekey || '0'}>\r\n          <Card.Body>\r\n            {activity.description}\r\n            <br></br>\r\n            {activity.hyperlink}\r\n            {<YouTubeVideo hyperlink={activity.hyperlink} />}\r\n          </Card.Body>\r\n        </Accordion.Collapse>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n","import { Modal, FormControl, Button } from 'react-bootstrap';\r\nimport FormWrapper from './FormWrapper';\r\nimport * as api from '../api/Group';\r\n\r\nexport default function CreateActivityDialog(props) {\r\n  function createActivity(data) {\r\n    return api.createGroupActivity(props.groupId, data).then(created => {\r\n      props.onClose(true);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      show={props.show}\r\n      size=\"lg\"\r\n      aria-labelledby=\"createActivityDialogTitle\"\r\n      onHide={() => props.onClose(false)}\r\n      centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"createActivityDialogTitle\">\r\n          Create Activity\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <FormWrapper onSubmit={createActivity}>\r\n          {sending => <>\r\n            <FormControl name=\"title\" placeholder=\"Title\" required />\r\n            <FormControl name=\"hyperlink\" placeholder=\"Hyperlink (Optional)\" />\r\n            <FormControl name=\"description\" placeholder=\"description\" required />\r\n            <Button variant=\"success\" type=\"submit\" disabled={sending}>CREATE</Button>\r\n          </>}\r\n        </FormWrapper>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n}\r\n\r\n","import React from 'react';\r\nimport { Container, Button, Accordion } from 'react-bootstrap';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport * as api from '../../api/Group';\r\nimport GroupCard from '../../components/GroupCard';\r\nimport Toast from '../../helpers/Toast';\r\nimport SortTable from '../../components/SortTable';\r\nimport Loading from '../../components/Loading';\r\nimport _get from 'lodash.get';\r\nimport EnsureLoggedIn from '../../components/EnsureLoggedIn';\r\nimport { connect } from 'react-redux';\r\nimport { joinGroup, leaveGroup } from '../../redux/Actions';\r\nimport ActivityCard from '../../components/ActivityCard';\r\nimport CreateActivityDialog from '../../components/CreateActivityDialog';\r\n\r\n\r\nclass $GroupDetailPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { group: null, showCreateDialog: false };\r\n    this.tryGettingGroup = this.tryGettingGroup.bind(this);\r\n    this.onDialogClose = this.onDialogClose.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.tryGettingGroup();\r\n  }\r\n\r\n  tryGettingGroup() {\r\n    const id = this.props.id;\r\n    api.getGroup(id).then(group => {\r\n      this.setState({ group });\r\n    }).catch(Toast.error);\r\n  }\r\n\r\n  onDialogClose(changes) {\r\n    this.setState({ showCreateDialog: false });\r\n    if (changes) {\r\n      this.tryGettingGroup();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const group = this.state.group;\r\n    if (!group) {\r\n      return <Loading />\r\n    }\r\n\r\n    const members = _get(group, 'members', []);\r\n    const activities = _get(group, 'activities', []);\r\n    const coachId = _get(group, 'coach._id');\r\n    const myId = _get(this.props, 'me._id', null);\r\n    const isCoach = coachId === myId;\r\n\r\n    return (\r\n      <Container className=\"pb-5\">\r\n        <GroupCard group={group} />\r\n        <h3>Members <span className=\"text-success\">({members.length || 0})</span></h3>\r\n        <SortTable data={members}>\r\n          <SortTable.Col heading=\"ID\" sort=\"_id\">\r\n            {m => <small>{m._id}</small>}\r\n          </SortTable.Col>\r\n          <SortTable.Col heading=\"Name\" sort=\"lastName\">\r\n            {m => <span>{m.firstName} {m.lastName}</span>}\r\n          </SortTable.Col>\r\n          {isCoach &&\r\n          <SortTable.Col>\r\n            {m => <Button variant=\"danger\" size=\"sm\" className=\"rounded-pill\">Remove</Button>}\r\n          </SortTable.Col>}\r\n        </SortTable>\r\n        <hr></hr>\r\n        <br></br>\r\n        <h3>\r\n          Activities <span className=\"text-success\">({activities.length || 0})</span>\r\n          {isCoach &&\r\n          <Button\r\n            className=\"w-1w0\"\r\n            variant=\"light\"\r\n            onClick={() => this.setState({ showCreateDialog: true })}\r\n          >+</Button>}\r\n        </h3>\r\n        <CreateActivityDialog groupId={this.props.id} show={this.state.showCreateDialog} onClose={this.onDialogClose} />\r\n        <Accordion defaultActiveKey=\"0\">\r\n          {activities.map((activity, index) => (\r\n            <ActivityCard activity={activity} ekey={String(index)} key={index} />\r\n          ))}\r\n        </Accordion>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => ({ ...state });\r\nconst mapDispatchToProps = { joinGroup, leaveGroup };\r\nconst Connected = connect(mapStateToProps, mapDispatchToProps)($GroupDetailPage);\r\n\r\nexport default function GroupDetailPage() {\r\n  // Workaround for using params in stateful component\r\n  const { id } = useParams();\r\n  return (\r\n    <EnsureLoggedIn>\r\n      <Connected id={id} />\r\n    </EnsureLoggedIn>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Container, FormControl, Button, FormLabel } from 'react-bootstrap';\r\nimport FormWrapper from '../components/FormWrapper';\r\nimport * as api from '../api/Account';\r\nimport { Redirect } from 'react-router-dom';\r\n/**\r\n * @enum {number}\r\n */\r\nconst Progress = Object.freeze({\r\n  ENTER_EMAIL: 1,\r\n  ANSWER_QUESTION: 2,\r\n  RESET_PASSWORD: 3,\r\n  DONE: 4,\r\n});\r\n\r\nfunction EnterEmailForm({ move }={}) {\r\n  async function sendEmail({ email }={}) {\r\n    const res = await api.getQuestions(email);\r\n    move(Progress.ANSWER_QUESTION, { email, ...res });\r\n    return res;\r\n  }\r\n\r\n  return (\r\n    <FormWrapper onSubmit={sendEmail}>\r\n      {sending => <>\r\n        <FormControl type=\"email\" placeholder=\"Email\" name=\"email\" required />\r\n        <br></br>\r\n        <Button type=\"submit\" variant=\"success\" disabled={sending}>CONTINUE</Button>\r\n      </>}\r\n    </FormWrapper>\r\n  );\r\n}\r\n\r\nfunction AnswerQuestionsForm({ move, payload }={}) {\r\n  async function answer(data) {\r\n    const res = await api.answerQuestions(data);\r\n    move(Progress.RESET_PASSWORD, res);\r\n    return res;\r\n  }\r\n\r\n  return (\r\n    <FormWrapper onSubmit={answer}>\r\n      {sending => <>\r\n        <FormControl type=\"hidden\" name=\"email\" value={payload.email} required />\r\n        <FormLabel>{payload.question1}</FormLabel>\r\n        <FormControl type=\"text\" name=\"answer1\" required />\r\n        <br></br>\r\n        <FormLabel>{payload.question2}</FormLabel>\r\n        <FormControl type=\"text\" name=\"answer2\" required />\r\n        <br></br>\r\n        <Button type=\"submit\" variant=\"success\" disabled={sending}>ANSWER QUESTIONS</Button>\r\n      </>}\r\n    </FormWrapper>\r\n  );\r\n}\r\n\r\nfunction ResetPasswordForm({ move, payload }={}) {\r\n  async function reset(data) {\r\n    if (data.password !== data.passwordCheck) {\r\n      throw new Error('Passwords are different');\r\n    }\r\n    const res = await api.passreset(data);\r\n    move(Progress.DONE, res);\r\n    return res;\r\n  }\r\n\r\n  return (\r\n    <FormWrapper onSubmit={reset}>\r\n      {sending => <>\r\n        <FormControl type=\"hidden\" name=\"token\" value={payload} required />\r\n        <FormLabel>New Password</FormLabel>\r\n        <FormControl type=\"password\" name=\"password\" required />\r\n        <FormLabel>Verify Password</FormLabel>\r\n        <FormControl type=\"password\" name=\"passwordCheck\" required />\r\n        <Button type=\"submit\" variant=\"success\" disabled={sending}>RESET PASSWORD</Button>\r\n      </>}\r\n    </FormWrapper>\r\n  );\r\n}\r\n\r\nclass PasswordResetPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      progress: Progress.ENTER_EMAIL,\r\n      payload: {}\r\n    };\r\n    this.move = this.move.bind(this);\r\n    this.getForm = this.getForm.bind(this);\r\n  }\r\n\r\n  move(progress, payload) {\r\n    this.setState({ progress, payload });\r\n  }\r\n\r\n  getForm() {\r\n    const { progress, payload } = this.state;\r\n    if (progress === Progress.ENTER_EMAIL) {\r\n      return <EnterEmailForm move={this.move} payload={payload} />\r\n    } else if (progress === Progress.ANSWER_QUESTION) {\r\n      return <AnswerQuestionsForm move={this.move} payload={payload} />\r\n    } else if (progress === Progress.RESET_PASSWORD) {\r\n      return <ResetPasswordForm move={this.move} payload={payload} />\r\n    } else {\r\n      return <Redirect to=\"/login\" />\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"w-50 pt-5\">\r\n        {this.getForm()}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PasswordResetPage;\r\n","import React from 'react';\r\nimport { Card, Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport _get from 'lodash.get';\r\n\r\nimport * as api from '../api/Challenge';\r\nimport Toast from '../helpers/Toast';\r\n\r\n\r\nconst REWARD_BADGE_CSS = { fontSize: '.75rem' };\r\n\r\nexport default class ChallengeCard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { disableParticipate: false };\r\n    this.tryParticipate = this.tryParticipate.bind(this);\r\n  }\r\n\r\n  async tryParticipate() {\r\n    this.setState({ disableParticipate: true });\r\n    const _id = _get(this.props, 'challenge._id');\r\n    try {\r\n      const result = await api.participateInChallenge(_id);\r\n      Toast.success(`Participated in \"${_get(result, 'challenge.title', _id)}\"`);\r\n    } catch (err) {\r\n      Toast.error(err);\r\n    }\r\n    this.setState({ disableParticipate: false });  \r\n  }\r\n\r\n  render() {\r\n    const challenge = this.props.challenge;\r\n\r\n    if (!challenge) {\r\n      return null;\r\n    }\r\n\r\n    // challenge.reward = 1;\r\n    return (\r\n      <Card className=\"mx-auto w-75 mb-5\">\r\n        <Card.Header className=\"d-flex justify-content-between\">\r\n          <span>\r\n            <Link to={`/challenges/${challenge._id}`} className=\"h4 text-dark\">\r\n              {challenge.title}\r\n            </Link>&nbsp;\r\n            {challenge.reward &&\r\n              <span\r\n                style={REWARD_BADGE_CSS}\r\n                class=\"badge bg-warning text-sm rounded-pill\"\r\n              >Rewarded</span>\r\n            }\r\n          </span>\r\n          <Button\r\n            onClick={this.tryParticipate}\r\n            variant=\"success\"\r\n            className=\"h-50 mr-0 w-25\"\r\n            size=\"sm\"\r\n            disabled={this.state.disableParticipate/*todo: disable if is coach */}\r\n          >Participate</Button>\r\n        </Card.Header>\r\n        <Card.Body>\r\n          <Card.Text>\r\n            {challenge.description}\r\n          </Card.Text>\r\n        </Card.Body>\r\n        <Card.Footer className=\"text-muted\">\r\n          Available Until: {challenge.closes}\r\n        </Card.Footer>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport * as api from '../../api/Challenge';\r\nimport { Container, FormControl, Row, Col, Button } from \"react-bootstrap\";\r\nimport Toast from \"../../helpers/Toast\";\r\nimport ChallengeCard from '../../components/ChallengeCard';\r\nimport FormWrapper from '../../components/FormWrapper';\r\nimport EnsureLoggedIn from '../../components/EnsureLoggedIn';\r\nimport CreateGroupDialog from '../../components/CreateGroupDialog';\r\nimport Loading from \"../../components/Loading\";\r\n\r\nclass $ChallengeListPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      challenges: [],\r\n      showCreateGroup: false\r\n    };\r\n    this.tryGettingChallenges = this.tryGettingChallenges.bind(this);\r\n    // this.tryJoinGroup = this.tryJoinGroup.bind(this);\r\n    this.onCreateGroupClose = this.onCreateGroupClose.bind(this);\r\n  }\r\n\r\n  tryGettingChallenges() {\r\n    api.getAvailableChallenges().then(challenges => {\r\n      this.setState({ challenges });\r\n    }).catch(Toast.error);\r\n  }\r\n\r\n  onCreateGroupClose(changes) {\r\n    this.setState({ showCreateGroup: false });\r\n    if (changes) {\r\n      this.tryGettingChallenges();\r\n    }\r\n  }\r\n\r\n  // async tryJoinGroup({ groupCode }={}) {\r\n  //   try {\r\n  //     await api.joinGroup(groupCode);\r\n  //     this.tryGettingChallenges();\r\n  //   } catch (err) {\r\n  //     throw err;\r\n  //   }\r\n  // }\r\n\r\n  componentDidMount() {\r\n    this.tryGettingChallenges();\r\n  }\r\n\r\n  render() {\r\n    const challenges = this.state.challenges;\r\n    if (!Array.isArray(challenges)) {\r\n      return <Loading />\r\n    }\r\n\r\n    return (\r\n      <Container>\r\n        {/* <FormWrapper onSubmit={this.tryJoinGroup}>\r\n          {sending => <>\r\n            <Row>\r\n              <Col>\r\n                <FormControl type=\"text\" placeholder=\"Group Code\" name=\"groupCode\" required />\r\n              </Col>\r\n              <Col>\r\n                <Button variant=\"success\" type=\"submit\" disabled={sending}>JOIN</Button>\r\n              </Col>\r\n            </Row>\r\n          </>}\r\n        </FormWrapper> */}\r\n        <h3>Available Challenges</h3>\r\n        {challenges.map((challenge, index) => (\r\n          <ChallengeCard challenge={challenge} key={index} />\r\n        ))}\r\n        <Row className=\"align-items-center\">\r\n          <Col className=\"w-100\">\r\n            <Button\r\n              variant=\"light\"\r\n              size=\"lg\"\r\n              className=\"mx-auto\"\r\n              style={{width:'200px'}}\r\n              onClick={() => this.setState({ showCreateGroup: true })}\r\n            >+</Button>\r\n          </Col>\r\n        </Row>\r\n        {/* <CreateGroupDialog show={this.state.showCreateGroup} onClose={this.onCreateGroupClose} /> */}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default function ChallengeListPage() {\r\n  return (\r\n    <EnsureLoggedIn>\r\n      <$ChallengeListPage />\r\n    </EnsureLoggedIn>\r\n  );\r\n}\r\n","import { Card } from 'react-bootstrap';\r\n\r\n\r\nfunction RewardCard(props={}) {\r\n  const reward = props.reward;\r\n\r\n  if (!reward) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <Card.Header>\r\n        {reward.title}\r\n      </Card.Header>\r\n      <Card.Body>\r\n        {reward.description}\r\n        {reward.company}\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n\r\n\r\nexport default RewardCard;\r\n","import React from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { Redirect } from 'react-router-dom';\r\nimport ChallengeCard from '../../components/ChallengeCard';\r\nimport EnsureLoggedIn from '../../components/EnsureLoggedIn';\r\nimport * as api from '../../api/Challenge';\r\nimport Loading from '../../components/Loading';\r\nimport Toast from '../../helpers/Toast';\r\nimport { Container } from 'react-bootstrap';\r\nimport RewardCard from '../../components/RewardCard';\r\nimport _get from 'lodash.get';\r\n\r\n\r\nfunction ParticipantBlock({ participant, challenge }={}) {\r\n  const id = _get(participant, '_id', null);\r\n  if (!id) {\r\n    return null;\r\n  }\r\n\r\n  const percent = (participant.progress / challenge.distance * 100).toFixed(2);\r\n\r\n  console.log(participant);\r\n\r\n  return (\r\n    <Container className=\"w-75\">\r\n      <h4>Progress</h4>\r\n      <h5>{participant.progress} KM&emsp;({percent}%)</h5>\r\n      <div className=\"w-100 text-right\">\r\n        {/* <span className=\"display-block mr-0\">\r\n          </span> */}\r\n          {/* <div className=\"text-right\"\r\n          style={{\r\n            width: `${Math.min(percent, 90)}%`\r\n          }}>\r\n            {participant.progress} */}\r\n          {/* </div> */}\r\n          {challenge.distance} KM\r\n      </div>\r\n      <div className=\"w-100 bg-primary rounded-pill\">\r\n        <div\r\n        className=\"mr-0 bg-success rounded-pill\"\r\n        style={{\r\n          height: '25px',\r\n          width:`${percent}%`\r\n        }}></div>\r\n      </div>\r\n    </Container>\r\n  );\r\n  \r\n}\r\n\r\n\r\nclass $ChallengeDetailPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fetching: true,\r\n      participant: null,\r\n      challenge: null,\r\n    };\r\n    this.tryGettingChallenge = this.tryGettingChallenge.bind(this);\r\n    this.tryGettingProgress = this.tryGettingProgress.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.tryGettingChallenge();\r\n    this.tryGettingProgress();\r\n  }\r\n  \r\n  async tryGettingChallenge() {\r\n    const id = this.props.id;\r\n    api.getChallenge(id).then(challenge => {\r\n      this.setState({ fetching: false, challenge });\r\n    }).catch(err => {\r\n      Toast.error(err);\r\n      this.setState({ fetching: false });\r\n    });\r\n  }\r\n\r\n  async tryGettingProgress() {\r\n    const id = this.props.id;\r\n    return api.getChallengeProgress(id).then(participant => {\r\n      this.setState({ participant });\r\n    }).catch(x=>x);\r\n  }\r\n\r\n  render() {\r\n    const { fetching, challenge, participant } = this.state;\r\n    if (fetching) {\r\n      return <Loading />\r\n    } else if (!challenge) {\r\n      Toast.error('Challenge doesn\\'t exist');\r\n      return <Redirect to=\"/challenges\" />\r\n    }\r\n\r\n    return (\r\n      <Container>\r\n        <ChallengeCard challenge={challenge} />\r\n        <RewardCard reward={challenge.reward} />\r\n        <ParticipantBlock participant={participant} challenge={challenge} />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default function ChallengeDetailPage() {\r\n  const { id } = useParams();\r\n  return (\r\n    <EnsureLoggedIn>\r\n      <$ChallengeDetailPage id={id} />\r\n    </EnsureLoggedIn>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { Container, Row, Col, FormLabel, FormControl, Button } from 'react-bootstrap';\r\nimport EnsureLoggedIn from '../components/EnsureLoggedIn';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../redux/Actions';\r\nimport FormWrapper from '../components/FormWrapper';\r\nimport * as api from '../api/Account';\r\nimport Toast from '../helpers/Toast';\r\n\r\nclass $ProfilePage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n    this.trySendingFitdata = this.trySendingFitdata.bind(this);\r\n  }\r\n\r\n  trySendingFitdata(data) {\r\n    return api.sendFitData(data).then(updated => {\r\n      console.log('Updated', updated);\r\n      this.props.login(updated, this.props.token);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { me } = this.props;\r\n    console.log('MEEEE', me);\r\n    return (\r\n      <Container className=\"w-75 mt-4\">\r\n        <h1>{me.firstName} {me.lastName}</h1>\r\n        <Container className=\"w-75\">\r\n          <FormWrapper onSubmit={this.trySendingFitdata}>\r\n            {sending => <>\r\n              <Row>\r\n                <Col><FormLabel className=\"text-end mr-0\">Height</FormLabel></Col>\r\n                <Col><FormControl required type=\"number\" defaultValue={me.height} name=\"height\" /></Col>\r\n              </Row>\r\n              <Row>\r\n                <Col><FormLabel className=\"text-end mr-0\">Waist</FormLabel></Col>\r\n                <Col><FormControl required type=\"number\" defaultValue={me.waist} name=\"waist\" /></Col>\r\n              </Row>\r\n              <Row>\r\n                <Col><FormLabel className=\"text-end mr-0\">Pushup Score</FormLabel></Col>\r\n                <Col><FormControl required type=\"number\" defaultValue={me.pushupScore} name=\"pushupScore\" /></Col>\r\n              </Row>\r\n              <Row>\r\n                <Col><FormLabel className=\"text-end mr-0\">Situp Score</FormLabel></Col>\r\n                <Col><FormControl required type=\"number\" defaultValue={me.situpScore} name=\"situpScore\" /></Col>\r\n              </Row>\r\n              <Row>\r\n                <Col><FormLabel className=\"text-end mr-0\">Frequency</FormLabel></Col>\r\n                <Col><FormControl required type=\"number\" defaultValue={me.freq || 1} min={1} max={7} name=\"freq\" /></Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <Button type=\"submit\" variant=\"success\" disabled={sending}>UPDATE FITNESS DATA</Button>\r\n                </Col>\r\n              </Row>\r\n            </>}\r\n          </FormWrapper>\r\n        </Container>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => ({ ...state });\r\nconst mapDispatchToProps = { login };\r\n\r\nconst Connected = connect(mapStateToProps, mapDispatchToProps)($ProfilePage);\r\n\r\nexport default function ProfilePage() {\r\n  return (\r\n    <EnsureLoggedIn>\r\n      <Connected />\r\n    </EnsureLoggedIn>\r\n  );\r\n}\r\n","import Request from '../helpers/Request';\nexport async function searchUser(body) {\n    console.log(body);\n    const res = await Request.post('/admin/search', body);\n    return res;\n\n  }\nexport async function updateUser(userId, body)\n{\n    console.log(body);\n    const res = await Request.post('/admin/user/' + userId, body);\n    return res;\n}\nexport async function searchUserById(userId,body) {\n  const res = await Request.get('/admin/user/' + userId, body);\n  console.log('Res: ' + res);\n  return res;\n\n}","import React from 'react';\nimport ChallengeCard from '../../components/ChallengeCard';\nimport EnsureLoggedIn from '../../components/EnsureLoggedIn';\nimport * as api from '../../api/Admin';\nimport Loading from '../../components/Loading';\nimport Toast from '../../helpers/Toast';\nimport { Container, FormControl } from 'react-bootstrap';\nimport FormWrapper from '../../components/FormWrapper';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport _get from 'lodash.get';\nimport { withRouter } from 'react-router-dom';\n\nclass SearchUserPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // Set to empty object\n      foundUser: []\n    };\n\n    /*\n    All methods that are not inherited by React.Component (like 'render()')\n    must be bound to this object like so:\n    */\n    this.trySearchingUser = this.trySearchingUser.bind(this);\n  }\n\n  /**\n   * \n   * @param {*} searchData - searchData will be given to the user from the FormWrapper\n   */\n  async trySearchingUser(searchData) {\n    try {\n      const foundUser = await api.searchUser(searchData);\n      // Once we retreived the user, set it to state\n      this.setState({\n        foundUser: foundUser\n      });\n    } catch (err) {\n      // Will display error\n      Toast.error(err);\n    }\n  }\n\n  render() {\n    // Unpack from state (easier to read)\n    const foundUser = this.state.foundUser;\n    const showDetail = (id) => {\n      this.props.history.push({\n        pathname: '/admin/user/' + id\n      });\n    }\n    return(\n      <EnsureLoggedIn message=\"You are not an admin\">\n        <Container>\n          {/* makes sending api requests easy */}\n          <FormWrapper onSubmit={this.trySearchingUser}>\n            {() => (\n              <Container>\n                {/* * implement FormControl (with name=\"email\") & Button (with type=\"submit\") for searching */}\n                <label htmlFor=\"email\" className=\"floatLabel\" type=\"text\">User Email</label>\n                <input type=\"text\" placeholder=\"Type user email\" name=\"email\" required/>\n                <button type=\"submit\">Search</button>\n              </Container>\n            )}\n          </FormWrapper>\n\n          {/* Display 'foundUser' how you like, I've used JSON.stringify as a temporary solution */}\n          {/* {<div>{JSON.stringify(foundUser)}</div>} */}\n          {foundUser.length !== 0\n          ?<>\n          <div>\n          <ListGroup.Item  action onClick={() => { showDetail(_get(foundUser, '[0]._id')) }}>\n            {_get(foundUser, '[0].firstName')}&nbsp;{_get(foundUser, '[0].lastName')}<br></br>\n            {_get(foundUser, '[0].email')}    \n             </ListGroup.Item>\n          </div>\n          </>\n          :<></>}\n        </Container>\n      </EnsureLoggedIn>\n    );\n  }\n}\nexport default withRouter(SearchUserPage);\n","import '../../styles/signup.css'\n\nimport React from 'react';\nimport { updateUser } from '../../api/Admin';\nimport FormWrapper from '../../components/FormWrapper';\nimport Toast from '../../helpers/Toast';\nimport { Redirect } from 'react-router-dom';\nimport { withRouter } from 'react-router-dom';\nimport * as api from '../../api/Admin';\n\nclass UpdateUserPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        user:{}\n    };\n    this.tryUpdate = this.tryUpdate.bind(this);\n  }\n\n  componentDidMount() {\n    const fetchData = async () => {\n      try\n      {\n          const foundUser = await api.searchUserById(this.props.match.params.id);\n          this.setState({\n            user: foundUser\n          });\n          console.log(foundUser);\n      }\n      catch(e)\n      {\n          Toast.error(e);\n          console.log(e);\n      }\n    };\n    fetchData();\n  }\n\n  async tryUpdate(data) {\n    try {\n      const value = await updateUser(this.props.match.params.id,data);\n      Toast.success('SUCCESS');\n      this.setState({ successful: true });\n    } catch (err) {\n      Toast.error(err.message);\n    }\n  }\n\n  render() {\n    const user = this.state.user;\n    // if (this.props.me) {\n    //   Toast.error('Already logged in');\n    //   return <Redirect to=\"/\" />\n    // }\n    return (\n      <div className=\"signUpForm-v2\">\n        <h2>Update User</h2>\n        <hr></hr>\n        <FormWrapper onSubmit={this.tryUpdate}>\n          {sending => <>\n            <p className=\"tableSection\">\n              Personal Information\n            </p>\n            <p className=\"double\">\n              <label htmlFor=\"firstName\" className=\"floatLabel\" type=\"text\">First Name</label>                \n              <input type=\"text\" defaultValue={user.firstName} name=\"firstName\" required/>\n\n              <label htmlFor=\"lastName\" className=\"floatLabel\" type=\"text\">Last Name</label>                \n              <input type=\"text\" defaultValue={user.lastName} name=\"lastName\" required/>\n            </p>\n            <p>\n              <label htmlFor=\"email\" className=\"floatLabel\" type=\"text\">Email</label>                \n              <input type=\"text\" defaultValue={user.email} name=\"email\" required/>\n            </p>\n            <p>\n              <label htmlFor=\"role\" className=\"floatLabel\" type=\"text\">Role</label>                \n              <input type=\"text\" defaultValue={user.role} name=\"role\" required/>\n            </p>\n            <p>\n              <label htmlFor=\"password\" className=\"floatLabel\" type=\"text\">Password</label>                \n              <input type=\"text\" defaultValue={user.password} name=\"password\" required/>\n            </p>\n            <p>\n              <label htmlFor=\"age\" className=\"floatLabel\" type=\"text\">Age</label>                \n              <input type=\"text\" defaultValue={user.age} name=\"age\" required/>\n            </p>\n            <p>\n              <label htmlFor=\"gender\" className=\"floatLabel\" type=\"text\">Gender</label>                \n              <input type=\"text\" defaultValue={user.gender} name=\"gender\" required/>\n            </p>\n            <hr></hr>\n            <button type=\"submit\">Update</button>\n          </>}\n        </FormWrapper>\n      </div>\n    );\n  }\n}\nexport default withRouter(UpdateUserPage);\n","import Request from '../helpers/Request';\r\n\r\nexport async function getAllChallenges() {\r\n  const res = await Request.get('/cusrep/challenges');\r\n  return res;\r\n}\r\n\r\nexport async function getChallenge(cid) {\r\n  return Request.get(`/cusrep/challenge/${cid}`);\r\n}\r\n\r\nexport async function createChallenge(data) {\r\n  return Request.post('/cusrep/challenge/create', data);\r\n}\r\n\r\nexport async function updateChallenge(cid, data) {\r\n  return Request.post(`/cusrep/challenge/${cid}`, data);\r\n}\r\n\r\nexport async function getAllRewards() {\r\n  const res = await Request.get('/cusrep/rewards');\r\n  return res;\r\n}\r\n","import UserRole from '../../types/UserRole';\r\nimport React from 'react';\r\nimport EnsureLoggedIn from '../../components/EnsureLoggedIn';\r\nimport { connect } from 'react-redux';\r\nimport SortTable from '../../components/SortTable';\r\nimport { Container } from 'react-bootstrap';\r\nimport * as api from '../../api/CustomerRep';\r\nimport { Link } from 'react-router-dom';\r\nimport Toast from '../../helpers/Toast';\r\n\r\nclass $RepChallengeListPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      challenges: []\r\n    };\r\n    this.tryGettingChallenges = this.tryGettingChallenges.bind(this);\r\n  }\r\n\r\n  async tryGettingChallenges() {\r\n    try {\r\n      const challenges = await api.getAllChallenges();\r\n      this.setState({ challenges });\r\n    } catch (err) {\r\n      Toast.error(err);\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.tryGettingChallenges();\r\n  }\r\n\r\n  render() {\r\n    const { challenges } = this.state;\r\n\r\n    return (\r\n      <Container>\r\n        <h3>All Challenges\r\n          <Link\r\n            className=\"btn btn-info\"\r\n            to=\"/rep/challenges/create\"\r\n          >CREATE</Link>\r\n        </h3>\r\n        <SortTable data={challenges}>\r\n          <SortTable.Col heading=\"ID\" sort=\"_id\">\r\n            {c => <small>{c._id}</small>}\r\n          </SortTable.Col>\r\n          <SortTable.Col heading=\"Title\" sort=\"title\">\r\n            {c => c.title}\r\n          </SortTable.Col>\r\n          <SortTable.Col heading=\"State\" sort=\"state\">\r\n            {c => c.state}\r\n          </SortTable.Col>\r\n          <SortTable.Col heading=\"Closes\" sort=\"closes\">\r\n            {c => c.closes}\r\n          </SortTable.Col>\r\n          <SortTable.Col>\r\n            {c => <Link to={`/rep/challenges/${c._id}`} className=\"btn btn-sm rounded-pill btn-warning\">Edit</Link>}\r\n          </SortTable.Col>\r\n        </SortTable>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default function RepChallengeListPage() {\r\n  return (\r\n    <EnsureLoggedIn role={UserRole.CUSTOMER_REP}>\r\n      <$RepChallengeListPage />\r\n    </EnsureLoggedIn>\r\n  );\r\n}\r\n","import UserRole from '../../types/UserRole';\r\nimport React from 'react';\r\nimport { Redirect, useParams } from 'react-router-dom';\r\nimport EnsureLoggedIn from '../../components/EnsureLoggedIn';\r\nimport { connect } from 'react-redux';\r\nimport { Container, FormControl, FormLabel } from 'react-bootstrap';\r\nimport FormWrapper from '../../components/FormWrapper';\r\nimport { Button } from 'react-bootstrap';\r\nimport * as api from '../../api/CustomerRep';\r\nimport Toast from '../../helpers/Toast';\r\nimport moment from 'moment';\r\nimport Loading from '../../components/Loading';\r\n\r\nconst CREATE = 'create';\r\nconst FORMAT = \"YYYY-MM-DD\";\r\n\r\nclass $RepEditChallengePage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      challenge: {},\r\n      exit: false\r\n    };\r\n    this.tryGettingChallenge = this.tryGettingChallenge.bind(this);\r\n    this.trySending = this.trySending.bind(this);\r\n    this.isCreateMode = this.isCreateMode.bind(this);\r\n    this.formatDate = this.formatDate.bind(this);\r\n  }\r\n\r\n  isCreateMode() {\r\n    return this.props.id === CREATE;\r\n  }\r\n\r\n  async tryGettingChallenge() {\r\n    try {\r\n      const challenge = await api.getChallenge(this.props.id);\r\n      this.setState({ challenge });\r\n    } catch (err) {\r\n      Toast.error(err);\r\n    }\r\n  }\r\n\r\n  async trySending(data) {\r\n    try {\r\n      if (this.isCreateMode()) {\r\n        await api.createChallenge(data);\r\n      } else {\r\n        await api.updateChallenge(this.props.id, data);\r\n      }\r\n      this.setState({ exit: true });\r\n    } catch (err) {\r\n      Toast.error(err);\r\n    }\r\n  }\r\n\r\n  formatDate(date) {\r\n    if (!date) {\r\n      if (!this.isCreateMode()) {\r\n        return null;\r\n      }\r\n      const d = new Date(Date.now());\r\n      d.setMonth(d.getMonth() + 1);\r\n      date = d;\r\n    }\r\n    return moment(date).format(FORMAT);\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (!this.isCreateMode()) {\r\n      this.tryGettingChallenge();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { challenge, exit } = this.state;\r\n\r\n    \r\n    if (exit) {\r\n      return <Redirect to=\"/rep/challenges\" />\r\n    } else if (!this.isCreateMode() && !challenge._id) {\r\n      return <Loading />\r\n    }\r\n\r\n    const closes = this.formatDate(challenge.closes);\r\n\r\n    return (\r\n      <Container>\r\n        {this.isCreateMode() ? 'CREATE' : (`UPDATE ${this.props.id}`)}\r\n        <FormWrapper onSubmit={this.trySending}>\r\n          {sending => <>\r\n            <FormLabel>Title</FormLabel>\r\n            <FormControl defaultValue={challenge.title} name=\"title\" required />\r\n            <FormLabel>Distance</FormLabel>\r\n            <FormControl defaultValue={challenge.distance} type=\"number\" name=\"distance\" required />\r\n            <FormLabel>Closes</FormLabel>\r\n            <FormControl defaultValue={closes} name=\"closes\" type=\"date\" required />\r\n            <FormLabel>State</FormLabel>\r\n            <FormControl defaultValue={challenge.state || 'A'} name=\"state\" required />\r\n            {/* <FormLabel>State</FormLabel>\r\n            <FormControl defaultValue={} name=\"reward\" required /> */}\r\n            <FormLabel>Description</FormLabel>\r\n            <FormControl defaultValue={challenge.description} as=\"textarea\" name=\"description\" required />\r\n            <Button type=\"submit\" variant=\"success\" disabled={sending}>\r\n              {this.isCreateMode() ? 'CREATE' : 'UPDATE'}\r\n            </Button>\r\n          </>}\r\n        </FormWrapper>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default function RepEditChallengePage() {\r\n  const { id } = useParams();\r\n  return (\r\n    <EnsureLoggedIn role={UserRole.CUSTOMER_REP}>\r\n      <$RepEditChallengePage id={id} />\r\n    </EnsureLoggedIn>\r\n  );\r\n}\r\n","import UserRole from '../../types/UserRole';\r\nimport React from 'react';\r\nimport EnsureLoggedIn from '../../components/EnsureLoggedIn';\r\nimport { connect } from 'react-redux';\r\n\r\nclass $RepRewardListPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n\r\n\r\nexport default function RepRewardListPage() {\r\n  return (\r\n    <EnsureLoggedIn role={UserRole.CUSTOMER_REP}>\r\n      <$RepRewardListPage />\r\n    </EnsureLoggedIn>\r\n  );\r\n}\r\n","import UserRole from '../../types/UserRole';\r\nimport React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport EnsureLoggedIn from '../../components/EnsureLoggedIn';\r\nimport { connect } from 'react-redux';\r\n\r\nclass $RepEditRewardPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n\r\n\r\nexport default function RepEditRewardPage() {\r\n  const { id } = useParams();\r\n  return (\r\n    <EnsureLoggedIn role={UserRole.CUSTOMER_REP}>\r\n      <$RepEditRewardPage id={id} />\r\n    </EnsureLoggedIn>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\nfunction IndexPage(props={}) {\r\n  const me = props.me;\r\n  return (\r\n    <Container className=\"mt-3 w-75\">\r\n      <h1>Fat2Fit Web</h1>\r\n      <hr></hr>\r\n      {me &&\r\n      <h3>Hello {me.firstName}!</h3>}\r\n      <p>\r\n        Welcome to Fat2Fit's web application. We're happy to see what you have to offer.<br></br>\r\n      </p>\r\n\r\n      <p>\r\n        Some key features of the app:\r\n        <ul>\r\n          <li>Viewing challenge progress</li>\r\n          <li>Auto log in when launching</li>\r\n        </ul>\r\n      </p>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({ ...state });\r\nexport default connect(mapStateToProps)(IndexPage);\r\n","import { BrowserRouter, Route } from \"react-router-dom\";\nimport NavBar from './NavBar';\nimport LoginPage from \"../pages/LoginPage\";\nimport SignupPage from '../pages/SignupPage';\nimport GroupListPage from '../pages/group/GroupListPage';\nimport GroupDetailPage from \"../pages/group/GroupDetailPage\";\nimport PasswordResetPage from '../pages/PasswordResetPage';\nimport ChallengeListPage from '../pages/challenge/ChallengeListPage';\nimport ChallengeDetailPage from '../pages/challenge/ChallengeDetailPage';\nimport ProfilePage from \"../pages/ProfilePage\";\nimport SearchUserPage from \"../pages/admin/SearchUserPage\";\nimport UpdateUserPage from \"../pages/admin/UpdateUserPage\";\n\nimport RepChallengeListPage from \"../pages/rep/RepChallengeListPage\";\nimport RepEditChallengePage from \"../pages/rep/RepEditChallengePage\";\nimport RepRewardListPage from \"../pages/rep/RepRewardListPage\";\nimport RepEditRewardPage from \"../pages/rep/RepEditRewardPage\";\nimport IndexPage from \"../pages/IndexPage\";\n\nexport default function Router() {\n  return (\n    <BrowserRouter>\n      <NavBar />\n      <Route path=\"/\" exact component={() => <IndexPage />} />\n      <Route path=\"/login\" exact component={() => <LoginPage />} />\n      <Route path=\"/profile\" exact component={() => <ProfilePage />} />\n      <Route path=\"/signup\" exact component={() => <SignupPage />} />\n      <Route path=\"/groups\" exact component={() => <GroupListPage />} />\n      <Route path=\"/groups/:id\" exact component={() => <GroupDetailPage />} />\n      <Route path=\"/challenges\" exact component={() => <ChallengeListPage />} />\n      <Route path=\"/challenges/:id\" exact component={() => <ChallengeDetailPage />} />\n      <Route path=\"/passreset\" exact component={() => <PasswordResetPage />} />\n      <Route path=\"/searchUser\" exact component={() => <SearchUserPage />} />\n      <Route path=\"/admin/user/:id\" exact component={() => <UpdateUserPage />} />\n      <Route path=\"/rep/challenges\" exact component={() => <RepChallengeListPage />} />\n      <Route path=\"/rep/challenges/:id\" exact component={() => <RepEditChallengePage />} />\n      <Route path=\"/rep/rewards\" exact component={() => <RepRewardListPage />} />\n      <Route path=\"/rep/rewards/:id\" exact component={() => <RepEditRewardPage />} />\n    </BrowserRouter>\n  );\n}","import './styles/App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'toastify-js/src/toastify.css'\n\nimport React from 'react';\nimport Cookies from 'js-cookie';\nimport config from './config';\nimport * as api from './api/Account';\nimport Router from './navigation/Router';\nimport Request from './helpers/Request';\nimport Loading from './components/Loading';\nimport { connect } from 'react-redux';\nimport { login } from './redux/Actions';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { loading: true };\n    this.touchServer = this.touchServer.bind(this);\n  }\n\n  componentDidMount() {\n    this.touchServer();\n  }\n  \n  async touchServer() {\n    const cookie = Cookies.get(config.SESS_COOKIE);\n    if (!cookie) {\n      return void this.setState({ loading: false });\n    }\n    try {\n      const { user, token } = await api.touch();\n      this.props.login(user, token);\n      Request.authorization(token);\n    } catch (e) {}\n    this.setState({ loading: false });\n  }\n\n  render() {\n    if (this.state.loading) {\n      return <Loading />\n    }\n\n    return (\n      <Router />\n    );\n  }\n}\nconst mapStateToProps = (state, ownProps) => ({ ...state });\nconst mapDispatchToProps = { login };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './styles/index.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport Store from './redux/Store';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={Store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}